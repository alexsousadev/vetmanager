generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id_usuario    Int           @id @default(autoincrement())
  cpf_usuario   String        @unique
  nome_usuario  String
  email_usuario String        @unique
  senha_usuario String
  foto_usuario  String
  Avaliacao     Avaliacao[]
  Pet           Pet[]
  Agendamento   Agendamento[]
}

model Pet {
  id_pet            Int           @id @default(autoincrement())
  nome_pet          String
  especie_pet       String
  raca_pet          String
  sexo_pet          String
  peso_pet          Float
  altura_pet        Float
  id_usuario        Usuario       @relation(fields: [usuarioId_usuario], references: [id_usuario])
  usuarioId_usuario Int
  Agendamento       Agendamento[]
}

model Clinica {
  id_clinica        Int                    @id
  cnpj_clinica      String                 @unique
  nome_clinica      String
  telefone_clinica  String
  foto_clinica      String
  avaliacao_clinica Float
  total_avaliacoes  Int
  Avaliacao         Avaliacao[]
  Agendamento       Agendamento[]
  Horarios          HorarioFuncionamento[]
  id_localizacao    LocalizacaoClinica[]
  ServicoClinica    ServicoClinica[]
}

model ServicoClinica {
  id_servico_clinica         Int         @id
  tipoServicoId              TipoServico @relation(fields: [tipoServicoId_tipo_servico], references: [id_tipo_servico])
  clinicaId                  Int
  clinica                    Clinica     @relation(fields: [clinicaId], references: [id_clinica])
  tipoServicoId_tipo_servico Int
  Servico                    Servico?    @relation(fields: [servicoId_servico], references: [id_servico])
  servicoId_servico          Int?
}

model TipoServico {
  id_tipo_servico   Int              @id
  nome_tipo         String
  servicoId_servico Int
  servico           Servico          @relation(fields: [servicoId_servico], references: [id_servico])
  ServicoClinica    ServicoClinica[]
  Agendamento       Agendamento[]
}

model Servico {
  id_servico        Int              @id
  nome_servico      String
  descricao_servico String
  preco_servico     Float
  tipos_servico     TipoServico[]
  Agendamento       Agendamento[]
  ServicoClinica    ServicoClinica[]
}

model LocalizacaoClinica {
  id_localizacao    Int     @id @default(autoincrement())
  latitude          Float 
  longitude         Float 
  endereco          String
  cidade            String
  estado            String
  cep               String
  clinicaId_clinica Int
  Clinica           Clinica @relation(fields: [clinicaId_clinica], references: [id_clinica])
}

model DiaSemana {
  id_dia   Int                    @id
  nome_dia String                 @unique
  Horarios HorarioFuncionamento[]
}

model HorarioFuncionamento {
  id_horario     Int       @id @unique @default(autoincrement())
  horario_inicio String 
  horario_fim    String 
  id_dia         Int 
  dia            DiaSemana @relation(fields: [id_dia], references: [id_dia])
  Clinica        Clinica?  @relation(fields: [clinicaId], references: [id_clinica])
  clinicaId      Int?
}

model Avaliacao {
  id_avaliacao         Int      @id @default(autoincrement())
  nota_avaliacao       Int
  comentario_avaliacao String
  data_avaliacao       DateTime
  id_clinica           Clinica  @relation(fields: [clinicaId_clinica], references: [id_clinica])
  id_usuario           Usuario  @relation(fields: [usuarioId_usuario], references: [id_usuario])
  clinicaId_clinica    Int
  usuarioId_usuario    Int
}

model Agendamento {
  id_agendamento             Int                @id @default(autoincrement())
  data_agendamento           DateTime
  horario_agendamento        String
  status_agendamento         String
  id_tipo_servico            TipoServico        @relation(fields: [tipoServicoId_tipo_servico], references: [id_tipo_servico])
  id_pet                     Int 
  pet                        Pet                @relation(fields: [id_pet], references: [id_pet])
  id_usuario                 Int 
  usuario                    Usuario            @relation(fields: [id_usuario], references: [id_usuario])
  id_clinica                 Int 
  clinica                    Clinica            @relation(fields: [id_clinica], references: [id_clinica])
  resultadoId                Int? 
  resultado                  ResultadoConsulta? @relation(fields: [resultadoId], references: [id_resultado])
  Servico                    Servico?           @relation(fields: [servicoId_servico], references: [id_servico])
  servicoId_servico          Int?
  tipoServicoId_tipo_servico Int
}

model ResultadoConsulta {
  id_resultado   Int           @id @default(autoincrement())
  diagnostico    String
  observacoes    String?
  id_agendamento Int           @unique
  data_resultado DateTime      @default(now()) 
  Agendamento    Agendamento[]
}
